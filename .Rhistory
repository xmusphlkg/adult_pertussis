alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig_1
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.title.position = 'top',
legend.direction = 'horizontal',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig_1
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3, byrow = TRUE))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig_1
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8,
device = cairo_pdf,
family = 'Helvetica')
fig_2 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(nol = 3))+
labs(x = NULL,
y = 'DALYs (Disability-Adjusted Life Years)',
fill = "APC (95% CI)",
title = 'B')
fig_2
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8,
device = cairo_pdf,
family = 'Helvetica')
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3, byrow = TRUE))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig_1
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8,
device = cairo_pdf,
family = 'Helvetica')
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3, byrow = TRUE))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
# save --------------------------------------------------------------------
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8,
device = cairo_pdf,
family = 'Helvetica')
data <- filter(df_global_trend, measure_name == 'DALYs (Disability-Adjusted Life Years)')
jp_model <- joinpoint(data,
year,
val,
run_opt = run_opt,
export_opt = export_opt)
df_jp_apc <- jp_model$apc |>
# round result
mutate(across(c(apc, apc_95_lcl, apc_95_ucl), ~round(., 2)),
p_value = as.numeric(p_value),
p_value_label = case_when(p_value < 0.001 ~ '***',
p_value < 0.01 ~ '**',
p_value < 0.05 ~ '*',
TRUE ~ ''),
legend = paste0(segment_start, '~', segment_end, '\n',
apc, '(', apc_95_lcl, '~', apc_95_ucl, ')', p_value_label))
# get breaks of y axis
breaks <- pretty(c(data$val, data$lower, data$upper*1.2))
fig_2 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = paletteer_d("PrettyCols::Lucent"))+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(nol = 3))+
labs(x = NULL,
y = 'DALYs (Disability-Adjusted Life Years)',
fill = "APC (95% CI)",
title = 'B')
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8,
device = cairo_pdf,
family = 'Helvetica')
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8.5,
device = cairo_pdf,
family = 'Helvetica')
df_jp_apc
paletteer_d("PrettyCols::Lucent")
# set colors
colors <- paletteer_d("viridis::viridis")(nrow(df_jp_apc))
paletteer_d("viridis::viridis")
# set colors
colors <- paletteer_d("PrettyCols::Lucent")(nrow(df_jp_apc))
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(df_jp_apc$apc)]
colors
# get breaks of y axis
breaks <- pretty(c(data$val, data$lower, data$upper*1.2))
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(df_jp_apc$apc)]
fig_2 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = colors)+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(nol = 3))+
labs(x = NULL,
y = 'DALYs (Disability-Adjusted Life Years)',
fill = "APC (95% CI)",
title = 'B')
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8.5,
device = cairo_pdf,
family = 'Helvetica')
data <- filter(df_global_trend, measure_name == 'Incidence')
jp_model <- joinpoint(data,
year,
val,
run_opt = run_opt,
export_opt = export_opt)
df_jp_apc <- jp_model$apc |>
# round result
mutate(across(c(apc, apc_95_lcl, apc_95_ucl), ~round(., 2)),
p_value = as.numeric(p_value),
p_value_label = case_when(p_value < 0.001 ~ '***',
p_value < 0.01 ~ '**',
p_value < 0.05 ~ '*',
TRUE ~ ''),
legend = paste0(segment_start, '~', segment_end, '\n',
apc, '(', apc_95_lcl, '~', apc_95_ucl, ')', p_value_label))
# get breaks of y axis
breaks <- pretty(c(data$val, data$lower, data$upper))
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(df_jp_apc$apc)]
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = colors)+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3, byrow = TRUE))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8.5,
device = cairo_pdf,
family = 'Helvetica')
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors
df_jp_apc$apc
colors[order(df_jp_apc$apc)]
colors[order(df_jp_apc$apc)]
order(df_jp_apc$apc)
fig_1
order(df_jp_apc$apc)
df_jp_apc$apc
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(df_jp_apc$apc)]
colors <- colors[order(order(df_jp_apc$apc))]
colors
order(order(df_jp_apc$apc))
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(order(df_jp_apc$apc))]
colors
# get breaks of y axis
breaks <- pretty(c(data$val, data$lower, data$upper))
# set colors
colors <- paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
colors <- colors[order(order(df_jp_apc$apc))]
fig_1 <- ggplot(data)+
geom_vline(data = df_jp_apc,
mapping = aes(xintercept = segment_end),
alpha = 0.5,
color = 'grey50')+
geom_rect(data = df_jp_apc,
aes(xmin = segment_start, xmax = segment_end,
ymin = 0, ymax = 0.1*max(breaks),
fill = legend),
alpha = 0.5)+
geom_line(mapping = aes(x = year, y = val),
color = "#00798CFF") +
geom_ribbon(mapping = aes(ymin = lower, ymax = upper,
x = year, y = val),
fill ="#00798CFF",
alpha = 0.7)+
scale_x_continuous(limits = c(1990, 2021),
breaks = seq(1990, 2021, 5),
expand = expansion(add = c(0, 1))) +
scale_y_continuous(limit = range(breaks),
breaks = breaks,
expand = expansion(mult = c(0, 0)),
labels = scientific_10) +
scale_fill_manual(values = colors)+
theme_bw()+
theme(plot.title.position = 'plot',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="bottom",
legend.justification.bottom = 'right',
legend.title.position = 'top',
legend.key.spacing.y = unit(0.35, 'cm'))+
guides(fill = guide_legend(ncol = 3, byrow = TRUE))+
labs(x = NULL,
y = 'Incidence',
fill = "APC (95% CI)",
title = 'A')
fig_1
fig_2
paletteer_d("PrettyCols::Lucent", n = nrow(df_jp_apc))
fig <- fig_1 / fig_2
ggsave('../outcome/fig_1_global_trend.pdf',
plot = fig,
width = 5,
height = 8.5,
device = cairo_pdf,
family = 'Helvetica')
